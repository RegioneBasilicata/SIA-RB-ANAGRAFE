package it.csi.solmr.ws.infoc;


import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.9
 * 2017-06-23T14:52:45.655+02:00
 * Generated source version: 2.4.9
 * 
 */
@WebServiceClient(name = "LSICService", 
                  wsdlLocation = "file:/C:/Users/ALESSA~1.SOR/AppData/Local/Temp/tempdir5592907756282739436.tmp/LSICService_1.wsdl",
                  targetNamespace = "http://servizio.frontend.ls.com") 
public class LSICService extends Service {

	public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://servizio.frontend.ls.com", "LSICService");
    public final static QName LSICServiceHttpEndpoint = new QName("http://servizio.frontend.ls.com", "LSICServiceHttpEndpoint");
    public final static QName LSICServiceHttpSoap11Endpoint = new QName("http://servizio.frontend.ls.com", "LSICServiceHttpSoap11Endpoint");
    public final static QName LSICServiceHttpSoap12Endpoint = new QName("http://servizio.frontend.ls.com", "LSICServiceHttpSoap12Endpoint");
    
    static { 
       URL url = null;
       try {
         url = LSICService.class.getResource("/LSICService.wsdl");                 
       }
       catch (Exception e) {
         java.util.logging.Logger.getLogger(LSICService.class.getName()).log(java.util.logging.Level.INFO, e.getMessage());
       }
       WSDL_LOCATION = url;        
    
       /* URL url = null;
        try {
            url = new URL("file:/C:/Users/ALESSA~1.SOR/AppData/Local/Temp/tempdir5592907756282739436.tmp/LSICService_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LSICService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/ALESSA~1.SOR/AppData/Local/Temp/tempdir5592907756282739436.tmp/LSICService_1.wsdl");
        }
        WSDL_LOCATION = url;*/
    }

    public LSICService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LSICService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LSICService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LSICService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LSICService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LSICService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpEndpoint")
    public LSICServicePortType getLSICServiceHttpEndpoint() {
        return super.getPort(LSICServiceHttpEndpoint, LSICServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpEndpoint")
    public LSICServicePortType getLSICServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(LSICServiceHttpEndpoint, LSICServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpSoap11Endpoint")
    public LSICServicePortType getLSICServiceHttpSoap11Endpoint() {
        return super.getPort(LSICServiceHttpSoap11Endpoint, LSICServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpSoap11Endpoint")
    public LSICServicePortType getLSICServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(LSICServiceHttpSoap11Endpoint, LSICServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpSoap12Endpoint")
    public LSICServicePortType getLSICServiceHttpSoap12Endpoint() {
        return super.getPort(LSICServiceHttpSoap12Endpoint, LSICServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LSICServicePortType
     */
    @WebEndpoint(name = "LSICServiceHttpSoap12Endpoint")
    public LSICServicePortType getLSICServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(LSICServiceHttpSoap12Endpoint, LSICServicePortType.class, features);
    }

}
